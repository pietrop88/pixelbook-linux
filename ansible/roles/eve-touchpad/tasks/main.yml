---

# Todo: move apt install to common role
#- name: Install build dependencies
#  become: true
#  pacman:
#    name:
#      - gtest
#      - jsoncpp
#      - xorg-util-macros
#      - xorg

# libevdev (chromium fork)
- name: Clone chromium fork of libevdev
  git:
    repo: "{{ libevdev_repo_url }}"
    dest: "{{ libevdev_workdir }}"
    version: "{{ libevdev_version }}"

- name: Copy libevdev patch file
  copy:
    src: "libevdev/{{ libevdev_patch_file }}"
    dest: "{{ libevdev_workdir }}"

- name: Apply libevdev patch file
  command: "git am {{ libevdev_patch_file }}"
  args:
    chdir: "{{ libevdev_workdir }}"
    creates: "{{ libevdev_workdir }}/src/libevdev-cros.c"

- name: Build libevdev-cros
  shell: "make"  # this fails with the command module, for some reason
  args:
    chdir: "{{ libevdev_workdir }}"
    creates: "{{ libevdev_workdir }}/src/libevdev-cros.so.0"

- name: Install libevdev-cros
  become: true
  shell: "make install"
  args:
    chdir: "{{ libevdev_workdir }}"
    creates: /usr/lib/libevdev-cros.so.0


# chromeos gestures lib

- name: Clone libgestures repo
  git:
    repo: "{{ gestures_repo_url }}"
    dest: "{{ gestures_workdir }}"
    version: "{{ gestures_version }}"

- name: Copy gestures patch file
  copy:
    src: "gestures/{{ gestures_patch_file }}"
    dest: "{{ gestures_workdir }}"

- name: Check if we need to apply patch
  register: patch_pre_check
  command: "grep Werror {{ gestures_workdir }}/Makefile"
  ignore_errors: true

- name: Apply patch
  when: patch_pre_check.rc == 0
  command: "git am {{ gestures_patch_file }}"
  args:
    chdir: "{{ gestures_workdir }}"

- name: Build libgestures
  command: "make"
  args:
    chdir: "{{ gestures_workdir }}"
    creates: "{{ gestures_workdir }}/obj/libgestures.so.0"

- name: Install libgestures
  become: true
  command: "make install"
  args:
    chdir: "{{ gestures_workdir }}"
    creates: "/usr/lib/libgestures.so.0"

# xf86-input-cmt multi-touch driver

- name: Clone cmt repo
  git:
    repo: "{{ cmt_repo_url }}"
    dest: "{{ cmt_workdir }}"
    version: "{{ cmt_version }}"

- name: Copy patch files
  copy:
    src: "xf86-input-cmt/{{ item }}"
    dest: "{{ cmt_workdir }}"
  with_items: "{{ cmt_patch_files }}"

- name: Check if we need to patch
  register: cmt_patch_precheck
  command: "grep evdev-cros {{ cmt_workdir }}/src/Makefile.am"
  ignore_errors: true

- name: Apply patches
  when: cmt_patch_precheck.rc != 0
  command: "git am {{ item }}"
  args:
    chdir: "{{ cmt_workdir }}"
  with_items: "{{ cmt_patch_files }}"

- name: Generate configure script
  command: "bash autogen.sh"
  args:
    chdir: "{{ cmt_workdir }}"

- name: Configure cmt input driver
  command: "./configure --prefix=/usr"
  args:
    chdir: "{{ cmt_workdir }}"

- name: Build cmt input driver
  command: "make"
  args:
    chdir: "{{ cmt_workdir }}"

- name: Install cmt input driver
  become: true
  command: "make install"
  args:
    chdir: "{{ cmt_workdir }}"

- name: Ensure /etc/gesture exists
  become: true
  file:
    path: /etc/gesture
    state: directory

- name: Copy conf files
  become: true
  copy:
    src: "conf/{{ item }}"
    dest: "/etc/gesture"
  with_items: "{{ cmt_conf_files }}"

- name: Link conf files to X11 config dir
  become: true
  file:
    state: link
    path: "/usr/share/X11/xorg.conf.d/{{ item }}"
    src: "/etc/gesture/{{ item }}"
  with_items: "{{ cmt_conf_files }}"
