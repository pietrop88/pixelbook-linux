---
- name: Create working dir to build packages
  become: true
  file:
    path: "{{ eve_kernel_workdir }}"
    mode: 0777
    state: directory

#### Build & install chromium fork of linux kernel
- name: Copy eve kernel sources
  copy:
    src: "{{ eve_kernel_targz}}"
    dest: "{{ main_workdir }}/kernel.tar.gz" 

- name: Unzip eve kernel source
  unarchive:
    src: "{{ main_workdir }}/kernel.tar.gz"
    dest: "{{ eve_kernel_workdir }}"
    remote_src: yes

- name: Copy kernel config file
  copy:
    src: "{{ eve_kernel_config_file }}"
    dest: "{{ eve_kernel_workdir }}/.config"

- name: Check if we've built the kernel already
  register: kernel_built
  stat:
    path: "{{ eve_kernel_workdir }}/vmlinux"

- name: Build kernel
  when: kernel_built.stat.exists == False
  shell: "make oldconfig && make -j15 && make -j15 modules"
  args:
    creates: "{{ eve_kernel_workdir }}/vmlinux"
    chdir: "{{ eve_kernel_workdir }}"

- name: Check if we've installed the kernel already
  register: kernel_installed
  stat:
    path: "/boot/{{ eve_kernel_compiled_name }}"

- name: Install kernel
  when: kernel_built.stat.exists != True
  become: true
  shell: "make modules_install && make install"
  args:
    creates: "/boot/{{ eve_kernel_compiled_name }}"
    chdir: "{{ eve_kernel_workdir }}"

